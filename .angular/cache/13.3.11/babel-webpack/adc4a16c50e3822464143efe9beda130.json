{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nassim\\\\Desktop\\\\jocl-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Nassim\\\\Desktop\\\\jocl-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { StorageService } from 'src/app/service/storage.service';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"src/app/service/storage.service\";\nimport * as i3 from \"@angular/router\";\nexport var LoginValidComponent = /*#__PURE__*/(function () {\n  var LoginValidComponent = /*#__PURE__*/function () {\n    function LoginValidComponent(authService, storageService, router) {\n      _classCallCheck(this, LoginValidComponent);\n\n      this.authService = authService;\n      this.storageService = storageService;\n      this.router = router;\n      this.hide = true;\n      this.errorMessage = '';\n      this.roles = [];\n      this.isLoggedIn = false;\n      this.isLoginFailed = false;\n      this.form = {\n        username: '',\n        password: ''\n      };\n    }\n\n    _createClass(LoginValidComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.storageService.getToken()) {\n          this.isLoggedIn = true;\n          this.roles = this.storageService.getUser().roles;\n        }\n\n        if (this.isLoggedIn) {\n          this.router.navigate([\"/examples/about-us\"]);\n        }\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit() {\n        var _this = this;\n\n        this.authService.login(this.form).subscribe(function (data) {\n          _this.storageService.saveToken(data.accessToken);\n\n          _this.storageService.saveUser(data);\n\n          _this.isLoginFailed = false;\n          _this.isLoggedIn = true;\n          _this.roles = _this.storageService.getUser().roles;\n\n          if (_this.roles.includes(\"USER\")) {\n            _this.router.navigate([\"examples/about-us\"]);\n          }\n        }, function (err) {\n          _this.isLoginFailed = true;\n          _this.errorMessage = err.error.message;\n          Swal.fire({\n            icon: 'error',\n            title: 'La connexion a échoué',\n            text: 'Le nom d\\'utilisateur ou le mot de passe est incorrect. Veuillez réessayer.'\n          });\n        });\n      }\n    }]);\n\n    return LoginValidComponent;\n  }();\n\n  LoginValidComponent.ɵfac = function LoginValidComponent_Factory(t) {\n    return new (t || LoginValidComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginValidComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginValidComponent,\n    selectors: [[\"app-login-valid\"]],\n    decls: 2,\n    vars: 0,\n    template: function LoginValidComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login-valid works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return LoginValidComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}